// ุงุฎุชุจุงุฑ ุชุฑููุฒ ุงููุตูุต ุงูุนุฑุจูุฉ
// ูู ุจุชุดุบูู ูุฐุง ุงูููู ูุงุฎุชุจุงุฑ ุฅุตูุงุญ ูุดููุฉ ุงูุชุฑููุฒ

const { createClient } = require('@supabase/supabase-js');

// ุฅุนุฏุงุฏุงุช Supabase (ุงุณุชุจุฏููุง ุจุงูููู ุงูุตุญูุญุฉ)
const supabaseUrl = process.env.VITE_SUPABASE_URL || 'your_supabase_url';
const supabaseKey = process.env.VITE_SUPABASE_ANON_KEY || 'your_supabase_anon_key';

const supabase = createClient(supabaseUrl, supabaseKey, {
  global: {
    headers: {
      'Content-Type': 'application/json; charset=utf-8',
    },
  },
});

// ุจูุงูุงุช ุงุฎุชุจุงุฑ ุนุฑุจูุฉ
const testData = {
  customer: {
    name: 'ุฃุญูุฏ ูุญูุฏ ุนูู',
    phone: '07701234567',
    address: 'ุจุบุฏุงุฏุ ุงููุฑุงุฏุฉุ ุดุงุฑุน ุงูุฑุดูุฏ'
  },
  invoice: {
    customer_name: 'ูุงุทูุฉ ุญุณู',
    customer_phone: '07801234567',
    customer_address: 'ุจุตุฑุฉุ ุงููุนููุ ุญู ุงูุฌุงูุนุฉ',
    notes: 'ููุงุญุธุงุช ุฎุงุตุฉ ุจุงูุทูุจ - ููุงุด ุญุฑูุฑ ุฃุตูู'
  },
  user: {
    name: 'ูุฏูุฑ ุงููุธุงู',
    role: 'ุงุฏูู',
    status: 'ูุดุท'
  }
};

async function testArabicEncoding() {
  console.log('๐งช ุจุฏุก ุงุฎุชุจุงุฑ ุชุฑููุฒ ุงููุตูุต ุงูุนุฑุจูุฉ...\n');

  try {
    // ุงุฎุชุจุงุฑ 1: ุฅุถุงูุฉ ุนููู ุฌุฏูุฏ
    console.log('1๏ธโฃ ุงุฎุชุจุงุฑ ุฅุถุงูุฉ ุนููู ุฌุฏูุฏ...');
    const { data: customer, error: customerError } = await supabase
      .from('customers')
      .insert(testData.customer)
      .select()
      .single();

    if (customerError) {
      console.error('โ ุฎุทุฃ ูู ุฅุถุงูุฉ ุงูุนููู:', customerError);
    } else {
      console.log('โ ุชู ุฅุถุงูุฉ ุงูุนููู ุจูุฌุงุญ:', customer);
      console.log('   ุงูุงุณู:', customer.name);
      console.log('   ุงูุนููุงู:', customer.address);
    }

    // ุงุฎุชุจุงุฑ 2: ุฅุถุงูุฉ ูุงุชูุฑุฉ ุฌุฏูุฏุฉ
    console.log('\n2๏ธโฃ ุงุฎุชุจุงุฑ ุฅุถุงูุฉ ูุงุชูุฑุฉ ุฌุฏูุฏุฉ...');
    const { data: invoice, error: invoiceError } = await supabase
      .from('invoices')
      .insert({
        ...testData.invoice,
        total: 150000,
        paid_amount: 0,
        status: 'ูุนูู'
      })
      .select()
      .single();

    if (invoiceError) {
      console.error('โ ุฎุทุฃ ูู ุฅุถุงูุฉ ุงููุงุชูุฑุฉ:', invoiceError);
    } else {
      console.log('โ ุชู ุฅุถุงูุฉ ุงููุงุชูุฑุฉ ุจูุฌุงุญ:', invoice);
      console.log('   ุงุณู ุงูุนููู:', invoice.customer_name);
      console.log('   ุงูุนููุงู:', invoice.customer_address);
      console.log('   ุงูููุงุญุธุงุช:', invoice.notes);
    }

    // ุงุฎุชุจุงุฑ 3: ุฅุถุงูุฉ ูุณุชุฎุฏู ุฌุฏูุฏ
    console.log('\n3๏ธโฃ ุงุฎุชุจุงุฑ ุฅุถุงูุฉ ูุณุชุฎุฏู ุฌุฏูุฏ...');
    const { data: user, error: userError } = await supabase
      .from('users')
      .insert({
        ...testData.user,
        code: 'ADM001',
        email: 'admin@qurtuba.com'
      })
      .select()
      .single();

    if (userError) {
      console.error('โ ุฎุทุฃ ูู ุฅุถุงูุฉ ุงููุณุชุฎุฏู:', userError);
    } else {
      console.log('โ ุชู ุฅุถุงูุฉ ุงููุณุชุฎุฏู ุจูุฌุงุญ:', user);
      console.log('   ุงูุงุณู:', user.name);
      console.log('   ุงูุฏูุฑ:', user.role);
      console.log('   ุงูุญุงูุฉ:', user.status);
    }

    // ุงุฎุชุจุงุฑ 4: ูุฑุงุกุฉ ุงูุจูุงูุงุช ุงููุญููุธุฉ
    console.log('\n4๏ธโฃ ุงุฎุชุจุงุฑ ูุฑุงุกุฉ ุงูุจูุงูุงุช ุงููุญููุธุฉ...');
    
    const { data: customers } = await supabase
      .from('customers')
      .select('*')
      .limit(5);
    
    const { data: invoices } = await supabase
      .from('invoices')
      .select('*')
      .limit(5);

    console.log('๐ ุงูุนููุงุก ุงููุญููุธูู:');
    customers?.forEach(customer => {
      console.log(`   - ${customer.name} (${customer.phone})`);
    });

    console.log('\n๐ ุงูููุงุชูุฑ ุงููุญููุธุฉ:');
    invoices?.forEach(invoice => {
      console.log(`   - ${invoice.customer_name} (${invoice.status})`);
    });

    // ุงุฎุชุจุงุฑ 5: ุงูุชุญูู ูู ุงูุชุฑููุฒ
    console.log('\n5๏ธโฃ ุงุฎุชุจุงุฑ ุงูุชุฑููุฒ...');
    const testText = 'ุงุฎุชุจุงุฑ ุงููุต ุงูุนุฑุจู';
    const encoded = encodeURIComponent(testText);
    const decoded = decodeURIComponent(encoded);
    
    console.log('ุงููุต ุงูุฃุตูู:', testText);
    console.log('ุงููุต ุงููุฑูุฒ:', encoded);
    console.log('ุงููุต ุงูููููู:', decoded);
    console.log('ุงูุชุฑููุฒ ุตุญูุญ:', testText === decoded ? 'โ' : 'โ');

    console.log('\n๐ ุงูุชูู ุงูุงุฎุชุจุงุฑ!');
    console.log('\n๐ ููุงุญุธุงุช:');
    console.log('- ุฅุฐุง ูุงูุช ุงููุตูุต ุชุธูุฑ ุจุดูู ุตุญูุญุ ูุงูุฅุตูุงุญ ูุนูู');
    console.log('- ุฅุฐุง ูุงูุช ุงููุตูุต ุชุธูุฑ ูุฑูุฒุฉุ ุชุฃูุฏ ูู ุชุทุจูู fix-arabic-encoding.sql');
    console.log('- ุชุฃูุฏ ูู ุฃู ูุชุบูุฑุงุช ุงูุจูุฆุฉ ุตุญูุญุฉ');

  } catch (error) {
    console.error('โ ุฎุทุฃ ุนุงู ูู ุงูุงุฎุชุจุงุฑ:', error);
  }
}

// ุชุดุบูู ุงูุงุฎุชุจุงุฑ
if (require.main === module) {
  testArabicEncoding();
}

module.exports = { testArabicEncoding };
